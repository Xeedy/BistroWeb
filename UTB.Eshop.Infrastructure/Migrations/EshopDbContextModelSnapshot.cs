// <auto-generated />
using System;
using BistroWeb.Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BistroWeb.Infrastructure.Migrations
{
    [DbContext(typeof(EshopDbContext))]
    partial class EshopDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BistroWeb.Domain.Entities.Brewery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("ImageSrc")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(70)
                        .HasColumnType("varchar(70)");

                    b.HasKey("Id");

                    b.ToTable("Breweries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Testovací sada",
                            ImageSrc = "/img/products/produkty-01.jpg",
                            Name = "Testovci pivovar"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Sth",
                            ImageSrc = "/img/products/produkty-01.jpg",
                            Name = "Testingy"
                        });
                });

            modelBuilder.Entity("BistroWeb.Domain.Entities.Carousel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ImageAlt")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ImageSrc")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Carousel");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageAlt = "First slide",
                            ImageSrc = "/img/carousel/information-technology-specialist.jpg"
                        },
                        new
                        {
                            Id = 2,
                            ImageAlt = "Second slide",
                            ImageSrc = "/img/carousel/Information-Technology-1-1.jpg"
                        },
                        new
                        {
                            Id = 3,
                            ImageAlt = "Third slide",
                            ImageSrc = "/img/carousel/itec-index-banner.jpg"
                        });
                });

            modelBuilder.Entity("BistroWeb.Domain.Entities.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(110)
                        .HasColumnType("varchar(110)");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.Property<double?>("Price2")
                        .HasColumnType("double");

                    b.Property<string>("Section")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "",
                            Name = "Kofola (0,3 l/0,5 l)",
                            Price = 35.0,
                            Price2 = 25.0,
                            Section = "Nápoje"
                        },
                        new
                        {
                            Id = 2,
                            Description = "",
                            Name = "Royal Crown Cola (0,3 l/0,5 l)",
                            Price = 40.0,
                            Price2 = 30.0,
                            Section = "Nápoje"
                        },
                        new
                        {
                            Id = 3,
                            Description = "",
                            Name = "River Tonic (0,5 l)",
                            Price = 35.0,
                            Section = "Nápoje"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Jahoda, Hruška",
                            Name = "Džus Rauch",
                            Price = 45.0,
                            Section = "Nápoje"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Broskev, Mango, Pomeranč, Ananas",
                            Name = "Džus Rani",
                            Price = 45.0,
                            Section = "Nápoje"
                        },
                        new
                        {
                            Id = 6,
                            Description = "",
                            Name = "Mošt jablečný (0,3 l/0,5 l)",
                            Price = 50.0,
                            Section = "Nápoje"
                        },
                        new
                        {
                            Id = 7,
                            Description = "",
                            Name = "Rajec neperlivý, jemně perlivý (0,33 l)",
                            Price = 35.0,
                            Section = "Nápoje"
                        },
                        new
                        {
                            Id = 8,
                            Description = "",
                            Name = "Kohoutková voda s citronem (1 l)",
                            Price = 39.0,
                            Section = "Nápoje"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Máta, Bez, Zázvor, Malina, Višeň, Grapefruit, Pomeranč",
                            Name = "Domácí limonáda",
                            Price = 49.0,
                            Section = "Nápoje"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Pistácie, Banán, Vanilka",
                            Name = "Mléčný koktejl",
                            Price = 55.0,
                            Section = "Nápoje"
                        },
                        new
                        {
                            Id = 11,
                            Description = "Červené, Bílé",
                            Name = "Svařené víno",
                            Price = 59.0,
                            Section = "Nápoje"
                        },
                        new
                        {
                            Id = 12,
                            Description = "",
                            Name = "Espresso",
                            Price = 50.0,
                            Section = "Nápoje"
                        },
                        new
                        {
                            Id = 13,
                            Description = "",
                            Name = "Cappuccino",
                            Price = 60.0,
                            Section = "Nápoje"
                        },
                        new
                        {
                            Id = 14,
                            Description = "",
                            Name = "Starshollowské kakao (0,4 l)",
                            Price = 59.0,
                            Section = "Nápoje"
                        },
                        new
                        {
                            Id = 15,
                            Description = "",
                            Name = "Čepované pivo (4 pípy - dle aktuální nabídky)",
                            Price = 0.0,
                            Section = "Pivo"
                        },
                        new
                        {
                            Id = 16,
                            Description = "",
                            Name = "Láhvová piva  (cca 200 druhů - dle aktuální nabídky)",
                            Price = 0.0,
                            Section = "Pivo"
                        },
                        new
                        {
                            Id = 17,
                            Description = "",
                            Name = "Nealko pivo Bernard Jantar polotmavý (láhev 0,5 l)",
                            Price = 40.0,
                            Section = "Pivo"
                        },
                        new
                        {
                            Id = 18,
                            Description = "",
                            Name = "Nealko Bernard Švestka (láhev 0,5 l)",
                            Price = 40.0,
                            Section = "Pivo"
                        },
                        new
                        {
                            Id = 19,
                            Description = "",
                            Name = "Strongbow Apple Cider (plech 0,4 l)",
                            Price = 40.0,
                            Section = "Pivo"
                        },
                        new
                        {
                            Id = 20,
                            Description = "",
                            Name = "Bíle víno San Zeno (0,2 l)",
                            Price = 44.0,
                            Section = "Vína"
                        },
                        new
                        {
                            Id = 21,
                            Description = "",
                            Name = "Červené víno Turano (0,2 l)",
                            Price = 44.0,
                            Price2 = 0.0,
                            Section = "Vína"
                        },
                        new
                        {
                            Id = 22,
                            Description = "Captain Morgan s Colou",
                            Name = "Cuba Libre (0,3 l)",
                            Price = 69.0,
                            Section = "Míchané"
                        },
                        new
                        {
                            Id = 23,
                            Description = "",
                            Name = "Gin Tonic (0,3 l)",
                            Price = 75.0,
                            Section = "Míchané"
                        },
                        new
                        {
                            Id = 24,
                            Description = "Klasik, Honey, Fire",
                            Name = "Jack Daniel's Tenessee Whisky (0,04 l)",
                            Price = 72.0,
                            Section = "Destiláty"
                        },
                        new
                        {
                            Id = 25,
                            Description = "",
                            Name = "Johny Walker Red Label (0,04 l)",
                            Price = 65.0,
                            Section = "Destiláty"
                        },
                        new
                        {
                            Id = 26,
                            Description = "",
                            Name = "Tullamore Dew (0,04 l)",
                            Price = 65.0,
                            Section = "Destiláty"
                        },
                        new
                        {
                            Id = 27,
                            Description = "",
                            Name = "Jameson",
                            Price = 65.0,
                            Section = "Destiláty"
                        },
                        new
                        {
                            Id = 28,
                            Description = "",
                            Name = "Vodka Russian Standart (0,04 l)",
                            Price = 45.0,
                            Section = "Destiláty"
                        },
                        new
                        {
                            Id = 29,
                            Description = "",
                            Name = "Vodka Finlandia (0,04 l)",
                            Price = 45.0,
                            Section = "Destiláty"
                        },
                        new
                        {
                            Id = 30,
                            Description = "",
                            Name = "Slivovice Budík Jelínek (0,04 l)",
                            Price = 60.0,
                            Section = "Destiláty"
                        },
                        new
                        {
                            Id = 31,
                            Description = "",
                            Name = "Meruňkovice (0,04 l)",
                            Price = 60.0,
                            Section = "Destiláty"
                        },
                        new
                        {
                            Id = 32,
                            Description = "",
                            Name = "Spišská borovička (0,04 l)",
                            Price = 45.0,
                            Section = "Destiláty"
                        },
                        new
                        {
                            Id = 33,
                            Description = "",
                            Name = "Becherovka (0,04 l)",
                            Price = 40.0,
                            Section = "Destiláty"
                        },
                        new
                        {
                            Id = 34,
                            Description = "",
                            Name = " Jägermeister (0,04 l)",
                            Price = 50.0,
                            Section = "Destiláty"
                        },
                        new
                        {
                            Id = 35,
                            Description = "",
                            Name = "Lysá Hora bylinný likér (0,04 l)",
                            Price = 45.0,
                            Section = "Destiláty"
                        },
                        new
                        {
                            Id = 36,
                            Description = "",
                            Name = "Metaxa 5* (0,04 l)",
                            Price = 55.0,
                            Section = "Destiláty"
                        },
                        new
                        {
                            Id = 37,
                            Description = "",
                            Name = "Beefeater Gin (0,04 l)",
                            Price = 50.0,
                            Section = "Destiláty"
                        },
                        new
                        {
                            Id = 38,
                            Description = "",
                            Name = "Rum Ron Zacapa Centenario 23YO (0,04 l)",
                            Price = 115.0,
                            Section = "Destiláty"
                        },
                        new
                        {
                            Id = 39,
                            Description = "",
                            Name = "Rum Diplomatico Reserva Exclusiva 12YO (0,04 l)",
                            Price = 90.0,
                            Section = "Destiláty"
                        },
                        new
                        {
                            Id = 40,
                            Description = "",
                            Name = "Rum Legendario Elixír De Cuba (0,04 l)",
                            Price = 75.0,
                            Section = "Destiláty"
                        },
                        new
                        {
                            Id = 41,
                            Description = "",
                            Name = "Rum Ron Pampero Especial (0,04 l)",
                            Price = 70.0,
                            Section = "Destiláty"
                        },
                        new
                        {
                            Id = 42,
                            Description = "",
                            Name = "Heffron Rum (0,04 l)",
                            Price = 55.0,
                            Section = "Destiláty"
                        },
                        new
                        {
                            Id = 43,
                            Description = "",
                            Name = "Rum Captain Morgan Original Spiced Gold (0,04 l)",
                            Price = 49.0,
                            Section = "Destiláty"
                        },
                        new
                        {
                            Id = 44,
                            Description = "",
                            Name = "Rum Havana Club Aňejo 3 Aňos (0,04 l)",
                            Price = 50.0,
                            Section = "Destiláty"
                        },
                        new
                        {
                            Id = 45,
                            Description = "Original, Citrus",
                            Name = "Fernet Stock (0,04 l)",
                            Price = 39.0,
                            Section = "Destiláty"
                        },
                        new
                        {
                            Id = 46,
                            Description = "",
                            Name = "Griotka (0,04 l)",
                            Price = 35.0,
                            Section = "Destiláty"
                        },
                        new
                        {
                            Id = 47,
                            Description = "",
                            Name = "Peprmintový likér (0,04 l)",
                            Price = 30.0,
                            Section = "Destiláty"
                        },
                        new
                        {
                            Id = 48,
                            Description = "Niva, Gouda, Balkánský sýr, Lahůdkové tofu",
                            Name = "1. Palačinka se špenátem, sýrem a kukuřicí",
                            Price = 129.0,
                            Section = "Palačinky"
                        },
                        new
                        {
                            Id = 49,
                            Description = "Niva, Gouda, Balkánský sýr, Lahůdkové tofu",
                            Name = "2. Palačinka s tomatovým dipem, sýrem, kukuřicí a olivami",
                            Price = 129.0,
                            Section = "Palačinky"
                        },
                        new
                        {
                            Id = 50,
                            Description = "Niva, Gouda, Balkánský sýr, Lahůdkové tofu",
                            Name = "3. Palačinka s domácím chutney, sýrem, bazalkovým kořením a balsamicem",
                            Price = 129.0,
                            Section = "Palačinky"
                        },
                        new
                        {
                            Id = 51,
                            Description = "",
                            Name = "4. Sendvič s rajčatovou omáčkou, lahůdkovým tofu, kyselou okurkou a karamelizovanou cibulkou (*V)",
                            Price = 99.0,
                            Section = "Sendviče"
                        },
                        new
                        {
                            Id = 52,
                            Description = "",
                            Name = "5. Sendvič s rajčatovou omáčkou, schwarzvaldskou šunkou, parmesanem a rajčetem",
                            Price = 99.0,
                            Section = "Sendviče"
                        },
                        new
                        {
                            Id = 53,
                            Description = "",
                            Name = "6. Sendvič s rajčatovou omáčkou, schwarzvaldskou šunkou, nivou a kukuřicí",
                            Price = 99.0,
                            Section = "Sendviče"
                        },
                        new
                        {
                            Id = 54,
                            Description = "",
                            Name = "Pita Libanon - Pita s olivovým olejem a kořením zátar (*V)",
                            Price = 55.0,
                            Section = "Pity"
                        },
                        new
                        {
                            Id = 55,
                            Description = "",
                            Name = "Pita Balkán - Balkánský sýr, rajče, kardamom",
                            Price = 75.0,
                            Section = "Pity"
                        },
                        new
                        {
                            Id = 56,
                            Description = "",
                            Name = "Pita Tomato - Balkánský sýr, rajče, bazalka",
                            Price = 75.0,
                            Section = "Pity"
                        },
                        new
                        {
                            Id = 57,
                            Description = "",
                            Name = "Pita Kuku - Rajčatová omáčka, niva, kukuřice",
                            Price = 55.0,
                            Section = "Pity"
                        },
                        new
                        {
                            Id = 58,
                            Description = "",
                            Name = "Domácí Hummus (130g) s pitou (2ks), zakápnutý olivovým olejem (*V)",
                            Price = 95.0,
                            Section = "Speciality"
                        },
                        new
                        {
                            Id = 59,
                            Description = "",
                            Name = "Domácí slaný popcorn (*V)",
                            Price = 45.0,
                            Section = "Speciality"
                        },
                        new
                        {
                            Id = 60,
                            Description = "Česnekový (*V), Tatarka, Kečup, Sweetchilli",
                            Name = "Homestyle hranolky (200g) (*V) s dipem",
                            Price = 59.0,
                            Section = "Speciality"
                        },
                        new
                        {
                            Id = 61,
                            Description = "",
                            Name = "Palačinky s marmeládou, zmrzlinou a šlehačkou",
                            Price = 99.0,
                            Section = "Dezerty"
                        },
                        new
                        {
                            Id = 62,
                            Description = "",
                            Name = "Vanilková zmrzlina (1 kopeček)",
                            Price = 23.0,
                            Section = "Dezerty"
                        },
                        new
                        {
                            Id = 63,
                            Description = "",
                            Name = "Kešu natural (50g)",
                            Price = 49.0,
                            Section = "Doplňky"
                        },
                        new
                        {
                            Id = 64,
                            Description = "Solené, Hořčicové",
                            Name = "Brambůrky (100g)",
                            Price = 40.0,
                            Section = "Doplňky"
                        },
                        new
                        {
                            Id = 65,
                            Description = "",
                            Name = "Kroužky Jarní cibulka (50g)",
                            Price = 35.0,
                            Section = "Doplňky"
                        },
                        new
                        {
                            Id = 66,
                            Description = "",
                            Name = "Tyčinky Bertyčky - různé druhy (90g)",
                            Price = 30.0,
                            Section = "Doplňky"
                        },
                        new
                        {
                            Id = 67,
                            Description = "",
                            Name = "Křupky (60g)",
                            Price = 25.0,
                            Section = "Doplňky"
                        },
                        new
                        {
                            Id = 68,
                            Description = "",
                            Name = "Perníčky v čokoládě (70g)",
                            Price = 35.0,
                            Section = "Doplňky"
                        },
                        new
                        {
                            Id = 69,
                            Description = "",
                            Name = "Wasabi (50g)",
                            Price = 35.0,
                            Section = "Doplňky"
                        },
                        new
                        {
                            Id = 70,
                            Description = "",
                            Name = "Japonská směs (50g)",
                            Price = 35.0,
                            Section = "Doplňky"
                        },
                        new
                        {
                            Id = 71,
                            Description = "",
                            Name = "Zelený čaj s marockou mátou Tuarég (konvička cca 4dcl)",
                            Price = 80.0,
                            Section = "Čaje"
                        },
                        new
                        {
                            Id = 72,
                            Description = "",
                            Name = "Čínský zelený čaj Vzácné obočí (konvička cca 4dcl)",
                            Price = 70.0,
                            Section = "Čaje"
                        },
                        new
                        {
                            Id = 73,
                            Description = "",
                            Name = "Čínský tmavý čaj Puerh (konvička cca 4dcl)",
                            Price = 70.0,
                            Section = "Čaje"
                        },
                        new
                        {
                            Id = 74,
                            Description = "",
                            Name = "Cejlonský černý čaj Cejlon Adam's Peak (konvička cca 4dcl)",
                            Price = 70.0,
                            Section = "Čaje"
                        },
                        new
                        {
                            Id = 75,
                            Description = "",
                            Name = "Ovocný čaj Indiánské léto (konvička cca 4dcl)",
                            Price = 70.0,
                            Section = "Čaje"
                        },
                        new
                        {
                            Id = 76,
                            Description = "",
                            Name = "Ibiškový čaj faraónů Karkade (konvička cca 4dcl)",
                            Price = 70.0,
                            Section = "Čaje"
                        },
                        new
                        {
                            Id = 77,
                            Description = "",
                            Name = "Bylinkový čaj Rooibos (konvička cca 4dcl)",
                            Price = 70.0,
                            Section = "Čaje"
                        },
                        new
                        {
                            Id = 78,
                            Description = "",
                            Name = "Lipový čaj (konvička cca 4dcl)",
                            Price = 70.0,
                            Section = "Čaje"
                        },
                        new
                        {
                            Id = 79,
                            Description = "",
                            Name = "Mateřídouškový čaj (konvička cca 4dcl)",
                            Price = 70.0,
                            Section = "Čaje"
                        },
                        new
                        {
                            Id = 80,
                            Description = "",
                            Name = "Zázvorový čaj s medem (konvička cca 4dcl)",
                            Price = 80.0,
                            Section = "Čaje"
                        });
                });

            modelBuilder.Entity("BistroWeb.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("BreweryId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("ImageSrc")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(90)
                        .HasColumnType("varchar(90)");

                    b.Property<double>("Price")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("BreweryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BreweryId = 1,
                            Description = "Testovací sada",
                            ImageSrc = "/img/products/produkty-01.jpg",
                            Name = "Test",
                            Price = 999.0
                        },
                        new
                        {
                            Id = 2,
                            BreweryId = 2,
                            Description = "Cosik",
                            ImageSrc = "/img/products/produkty-01.jpg",
                            Name = "Testovacka",
                            Price = 10.0
                        });
                });

            modelBuilder.Entity("BistroWeb.Infrastructure.Identity.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = "9cf14c2c-19e7-40d6-b744-8917505c3106",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = "be0efcde-9d0a-461d-8eb6-444b043d6660",
                            Name = "Manager",
                            NormalizedName = "MANAGER"
                        },
                        new
                        {
                            Id = 3,
                            ConcurrencyStamp = "29dafca7-cd20-4cd9-a3dd-4779d7bac3ee",
                            Name = "Customer",
                            NormalizedName = "CUSTOMER"
                        });
                });

            modelBuilder.Entity("BistroWeb.Infrastructure.Identity.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b09a83ae-cfd3-4ee7-97e6-fbcf0b0fe78c",
                            Email = "michal.tesik1@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Michal",
                            LastName = "Těšík",
                            LockoutEnabled = true,
                            NormalizedEmail = "MICHAL.TESIK1@GMAIL.COM",
                            NormalizedUserName = "XEEDY",
                            PasswordHash = "AQAAAAEAACcQAAAAEM9O98Suoh2o2JOK1ZOJScgOfQ21odn/k6EYUpGWnrbevCaBFFXrNL7JZxHNczhh/w==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "SEJEPXC646ZBNCDYSM3H5FRK5RWP2TN6",
                            TwoFactorEnabled = false,
                            UserName = "Xeedy"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7a8d96fd-5918-441b-b800-cbafa99de97b",
                            Email = "manager@manager.cz",
                            EmailConfirmed = true,
                            FirstName = "Managerek",
                            LastName = "Managerovy",
                            LockoutEnabled = true,
                            NormalizedEmail = "MANAGER@MANAGER.CZ",
                            NormalizedUserName = "MANAGER",
                            PasswordHash = "AQAAAAEAACcQAAAAEOzeajp5etRMZn7TWj9lhDMJ2GSNTtljLWVIWivadWXNMz8hj6mZ9iDR+alfEUHEMQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "MAJXOSATJKOEM4YFF32Y5G2XPR5OFEL6",
                            TwoFactorEnabled = false,
                            UserName = "manager"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 1,
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 3
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("BistroWeb.Domain.Entities.Product", b =>
                {
                    b.HasOne("BistroWeb.Domain.Entities.Brewery", "Breweries")
                        .WithMany("Products")
                        .HasForeignKey("BreweryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Breweries");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("BistroWeb.Infrastructure.Identity.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("BistroWeb.Infrastructure.Identity.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("BistroWeb.Infrastructure.Identity.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("BistroWeb.Infrastructure.Identity.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BistroWeb.Infrastructure.Identity.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("BistroWeb.Infrastructure.Identity.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BistroWeb.Domain.Entities.Brewery", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
