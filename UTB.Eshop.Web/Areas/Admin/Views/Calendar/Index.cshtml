@using BistroWeb.Application.ViewModels
@model CalendarViewModel

@{
    var currentYear = Model.CurrentYear;
    var currentMonth = Model.CurrentMonth;

    // Validate if the current year and month are within a valid range
    if (currentYear < 1 || currentYear > 9999)
    {
        currentYear = DateTime.Now.Year;
    }

    if (currentMonth < 1 || currentMonth > 12)
    {
        currentMonth = DateTime.Now.Month;
    }

    var firstDayOfMonth = new DateTime(currentYear, currentMonth, 1);
    var daysInMonth = DateTime.DaysInMonth(currentYear, currentMonth);
}

<div class="calendar-container">
    <h1>Calendar</h1>
    <table class="calendar-table">
        <!-- Table header with day names -->
        <thead>
            <tr>
                <th>Sun</th>
                <th>Mon</th>
                <th>Tue</th>
                <th>Wed</th>
                <th>Thu</th>
                <th>Fri</th>
                <th>Sat</th>
            </tr>
        </thead>
        <tbody>
            <!-- Calendar grid -->
            @for (int i = 0; i < 6; i++)
            {
                <tr>
                    @for (int j = 0; j < 7; j++)
                    {
                        var currentDay = firstDayOfMonth.AddDays(i * 7 + j - (int)firstDayOfMonth.DayOfWeek);

                        // Determine the CSS class for the day
                        var dayClass = currentDay < DateTime.Today ? "past-day" :
                        currentDay.Date == DateTime.Today.Date ? "current-day" : "future-day";

                        <td class="@dayClass" onclick="dayCellClick('@currentDay.ToString("yyyy-MM-dd")')">
                            <div class="day-number">@currentDay.Day</div>
                            @if (Model.ShiftAssignments.TryGetValue(currentDay, out var assignedUsers))
                            {
                                foreach (var user in assignedUsers)
                                {
                                    <div>@user.UserName</div>
                                }
                            }
                        </td>
                    }
                </tr>
            }

        </tbody>
    </table>
</div>
<div id="assignShiftModal" class="modal">
    <!-- Modal content -->
    <div class="modal-content">
        <span class="close">&times;</span>
        <h2>Assign Shift</h2>
        <form asp-action="AssignShift">
            <input type="hidden" id="selectedDate" name="Date">
            <select name="UserId" asp-items="@(new SelectList(Model.Managers, "Id", "UserName"))"></select>
            <button type="submit">Assign</button>
        </form>
    </div>
</div>
@section Styles
    {
    <link rel="stylesheet" href="~/css/Calendar.css" asp-append-version="true" />
}
@section Scripts {
    <script>
        var modal = document.getElementById("assignShiftModal");

        // Get the <span> element that closes the modal
        var span = document.getElementsByClassName("close")[0];

        // When the user clicks the day cell, open the modal
        function dayCellClick(date) {
            document.getElementById('selectedDate').value = date;
            modal.style.display = "block";
        }

        // When the user clicks on <span> (x), close the modal
        span.onclick = function () {
            modal.style.display = "none";
        }

        // When the user clicks anywhere outside of the modal, close it
        window.onclick = function (event) {
            if (event.target == modal) {
                modal.style.display = "none";
            }
        }
    </script>

}
