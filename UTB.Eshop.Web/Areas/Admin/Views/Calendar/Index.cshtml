@using BistroWeb.Application.ViewModels
@model CalendarViewModel

@{
    var firstOption = Model.Managers.FirstOrDefault(m => m.Id.ToString() == Model.CurrentUserId);
    var otherOptions = Model.Managers.Where(m => m.Id.ToString() != Model.CurrentUserId);
}
@{
    var currentYear = Model.CurrentYear;
    var currentMonth = Model.CurrentMonth;

    // Validate if the current year and month are within a valid range
    if (currentYear < 1 || currentYear > 9999)
    {
        currentYear = DateTime.Now.Year;
    }

    if (currentMonth < 1 || currentMonth > 12)
    {
        currentMonth = DateTime.Now.Month;
    }

    var firstDayOfMonth = new DateTime(currentYear, currentMonth, 1);
    var daysInMonth = DateTime.DaysInMonth(currentYear, currentMonth);
}
<div class="main-container">
    <div class="calendar-container">
        <h1>Šichtovnica</h1>
        <div class="calendar-navigation">
            <a href="@Url.Action("Index", new { year = Model.PreviousMonthYear, month = Model.PreviousMonth })" class="month-nav">Předchozí</a>
            <h2 class="month-name">@System.Globalization.DateTimeFormatInfo.CurrentInfo.GetMonthName(currentMonth) @currentYear</h2>
            <a href="@Url.Action("Index", new { year = Model.NextMonthYear, month = Model.NextMonth })" class="month-nav">Následující</a>
        </div>

        <table class="calendar-table">
            <thead>
                <tr>
                    <th>Ne</th>
                    <th>Po</th>
                    <th>Út</th>
                    <th>St</th>
                    <th>Čt</th>
                    <th>Pá</th>
                    <th>So</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < 6; i++)
                {
                    <tr>
                        @for (int j = 0; j < 7; j++)
                        {
                            var currentDay = firstDayOfMonth.AddDays(i * 7 + j - (int)firstDayOfMonth.DayOfWeek);
                            if (currentDay.Month == currentMonth && currentDay.Year == currentYear)
                            {
                                var dayClass = currentDay < DateTime.Today ? "past-day" :
                                currentDay.Date == DateTime.Today.Date ? "current-day" : "future-day";

                                <td class="@dayClass" data-date="@currentDay.ToString("yyyy-MM-dd")">
                                    <div class="day-number">@currentDay.Day</div>
                                    @if (Model.ShiftAssignments.TryGetValue(currentDay, out var shiftAssignments))
                                    {
                                        foreach (var assignment in shiftAssignments)
                                        {
                                            <div class="user-name">@assignment.User.UserName</div>
                                        }
                                    }
                                </td>
                            }
                            else
                            {
                                <td class="empty-day"></td>
                            }
                        }
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Roll-up container for assigning shifts -->
    <div id="assignShiftContainer" class="assign-shift-container">
        <h2>Vyber datum</h2>
        <form asp-action="AssignShift" method="post">
            <h2>Kdo zabere směnu?</h2>
            <input type="hidden" id="selectedDate" name="Date" value="" />
            <input type="hidden" name="year" value="@Model.CurrentYear" />
            <input type="hidden" name="month" value="@Model.CurrentMonth" />
            <select name="UserId">
                @if (firstOption != null)
                {
                    <option value="@firstOption.Id">@firstOption.UserName</option>
                }
                @foreach (var manager in otherOptions)
                {
                    <option value="@manager.Id">@manager.UserName</option>
                }
            </select>
            <button type="submit">Potvrdit</button>
        </form>

        <!-- Delete Shift button -->
        @foreach (var shiftAssignments in Model.ShiftAssignments)
        {
            foreach (var shiftAssignment in shiftAssignments.Value)
            {
                // Ensure that currentDay is defined within this loop
                var currentDay = shiftAssignments.Key;

                // Only generate delete button for the shift associated with the current cell
                if (currentDay.Date == currentDay.Date)
                {
                    <form method="post" action="@Url.Action("DeleteShift")">
                        <input type="hidden" name="id" value="@shiftAssignment.ShiftId" />
                        <input type="hidden" name="year" value="@Model.CurrentYear" />
                        <input type="hidden" name="month" value="@Model.CurrentMonth" />
                        <button type="submit" class="delete-shift-button" onclick="return confirm('Are you sure you want to delete this shift?');">Delete Shift</button>
                    </form>
                }
            }
        }




    </div>
</div>
@section Styles {
    <link rel="stylesheet" href="~/css/Calendar.css" asp-append-version="true" />
}

@section Scripts {
    <script src="~/js/Calendar.js"></script>
}
